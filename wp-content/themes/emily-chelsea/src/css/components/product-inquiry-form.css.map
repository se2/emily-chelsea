{"version":3,"file":"dist/css/components/product-inquiry-form.css","mappings":"AAEA;EACC;EACA;EACA;EACA;EACA;AADD;AAEC;EACC;AAAF;AAGC;EACC;EACA;AADF;AAGC;EACC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AADF;;AAMC;EACC;EACA;AAHF;AAKC;EACC;EACA;EACA;EACA;AAHF;AAKE;EACC;EACA;EACA;AAHH;AAMC;EACC;EACA;AAJF;AAMC;EACC;EACA;EACA;EACA;EACA;AAJF;AAMC;EACC;EACA;EACA;EACA;EACA;AAJF;AAMC;EACC;EACA;EACA;EACA;EACA;AAJF;AAKE;EACC;EACA;EACA;AAHH;AAMC;EACC;AAJF;AAKE;EACC;AAHH;AAuBE;EACC;AANH;AAKE;;;;;;;;;;;;;;;;EACC;AANH;AChCI;ED2CF;IACC;EARD;EASC;IACC;EAPF;EAUA;IACC;IACA;IACA;EARD;EAWA;IACC;IACA;IACA;IACA;IACA;EATD;AACF,C","sources":["webpack://src/./assets/scss/components/product-inquiry-form.scss","webpack://src/./node_modules/bootstrap/scss/mixins/_breakpoints.scss"],"sourcesContent":["@import \"../base-components\";\n\n.product-inquiry-form-modal {\n\twidth: 95%;\n\tmax-width: 1280px;\n\toverflow: auto;\n\ttop: 20px;\n\tbottom: 20px;\n\t&.open {\n\t\tdisplay: block;\n\t}\n\n\t.modal__inner {\n\t\tpadding: 0;\n\t\tborder-radius: 0;\n\t}\n\t.modal__close {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tbackground: #d7bc99;\n\t\tborder-radius: 0;\n\t\tborder: 0;\n\t\twidth: 43px;\n\t\theight: 43px;\n\t\tcolor: #fff;\n\t\ttop: auto;\n\t}\n}\n\n.product-inquiry-form {\n\t&__inner {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t}\n\t&__left {\n\t\tflex: 0 0 100%;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\n\t\timg {\n\t\t\twidth: 300px;\n\t\t\tdisplay: block;\n\t\t\tmargin: 0 auto;\n\t\t}\n\t}\n\t&__right {\n\t\tflex: 0 0 100%;\n\t\tpadding: 15px 15px;\n\t}\n\t&__title {\n\t\ttext-align: center;\n\t\tfont: normal normal 600 18px/26px Outfit;\n\t\tletter-spacing: 2.7px;\n\t\tcolor: #bc8f55;\n\t\ttext-transform: uppercase;\n\t}\n\t&__product-title {\n\t\ttext-align: center;\n\t\tfont: normal normal normal 25px/26px New Forest;\n\t\tletter-spacing: 0px;\n\t\tcolor: #363636;\n\t\tmargin: 0 0 20px 0;\n\t}\n\t&__icon {\n\t\ttext-align: center;\n\t\twidth: 23px;\n\t\tcolor: #bc8f55;\n\t\tmargin: 0 auto;\n\t\ttop: 0;\n\t\tsvg {\n\t\t\twidth: 100%;\n\t\t\theight: auto;\n\t\t\tdisplay: block;\n\t\t}\n\t}\n\t.gform_footer {\n\t\tjustify-content: center !important;\n\t\t.gform_button {\n\t\t\twidth: auto !important;\n\t\t}\n\t}\n\n\t.gform_wrapper.gravity-theme input[type=\"color\"],\n\t.gform_wrapper.gravity-theme input[type=\"date\"],\n\t.gform_wrapper.gravity-theme input[type=\"datetime-local\"],\n\t.gform_wrapper.gravity-theme input[type=\"datetime\"],\n\t.gform_wrapper.gravity-theme input[type=\"email\"],\n\t.gform_wrapper.gravity-theme input[type=\"month\"],\n\t.gform_wrapper.gravity-theme input[type=\"number\"],\n\t.gform_wrapper.gravity-theme input[type=\"password\"],\n\t.gform_wrapper.gravity-theme input[type=\"search\"],\n\t.gform_wrapper.gravity-theme input[type=\"tel\"],\n\t.gform_wrapper.gravity-theme input[type=\"text\"],\n\t.gform_wrapper.gravity-theme input[type=\"time\"],\n\t.gform_wrapper.gravity-theme input[type=\"url\"],\n\t.gform_wrapper.gravity-theme input[type=\"week\"],\n\t.gform_wrapper.gravity-theme select,\n\t.gform_wrapper.gravity-theme textarea {\n\t\t&::placeholder {\n\t\t\topacity: 0.21;\n\t\t}\n\t}\n\n\t@include media-breakpoint-up(md) {\n\t\t&__left {\n\t\t\tflex: 0 0 54%;\n\t\t\timg {\n\t\t\t\twidth: 90%;\n\t\t\t}\n\t\t}\n\t\t&__right {\n\t\t\tflex: 0 0 46%;\n\t\t\tborder-left: 1px solid #bc8f55;\n\t\t\tpadding: 70px 35px;\n\t\t}\n\n\t\t&__product-title {\n\t\t\ttext-align: center;\n\t\t\tfont: normal normal normal 40px/46px New Forest;\n\t\t\tletter-spacing: 0px;\n\t\t\tcolor: #363636;\n\t\t\tmargin: 0 0 50px 0;\n\t\t}\n\t}\n}\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @if not $n {\n    @error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\n  }\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min:  breakpoint-min($name, $breakpoints);\n  $next: breakpoint-next($name, $breakpoints);\n  $max:  breakpoint-max($next);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($next, $breakpoints) {\n      @content;\n    }\n  }\n}\n"],"names":[],"sourceRoot":""}