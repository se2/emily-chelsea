{"version":3,"file":"dist/css/components/products.css","mappings":"AAEA;EACC;EACA;EACA;EACA;EACA;EACA;AADD;ACwDI;ED7DJ;IAQE;EACA;AACF;AACE;EACC;EACA;AACH;AC+CI;EDlDF;IAIE;IACA;EAGF;AACF;AACE;EACC;EACA;AACH;ACqCI;EDxCF;IAIE;IACA;EAGF;AACF;AACE;EACC;EACA;AACH;AC2BI;ED9BF;IAIE;IACA;EAGF;AACF;AACE;EACC;EACA;AACH;ACiBI;EDpBF;IAIE;IACA;EAGF;AACF;AAAC;EACC;EACA;EACA;AAEF;AACC;EACC;AACF;AAEC;EACC;AAAF;ACAI;EDDH;IAGE;EAED;AACF;ACLI;EDDH;IAME;EAID;AACF;AAHE;EACC;AAKH;AAHE;EACC;EACA;AAKH;AAHE;EACC;EACA;EACA;AAKH;ACtBI;EDcF;IAKE;EAOF;AACF;AALE;EACC;EACA;EACA;EACA;AAOH;ACjCI;EDsBF;IAME;EASF;AACF;AARG;EACC;EACA;EACA;EACA;EACA;EACA;KAAA;EACA;AAUJ;AAPE;EACC;AASH;AANE;EACC;EACA;EACA;EACA;EACA;AAQH;ACzDI;ED4CF;IAOE;IACA;EAUF;AACF;AANE;EACC;EACA;AAQH;;AAHA;EACC;EACA;EACA;EACA;EACA;AAMD;AAJC;EACC;EACA;EACA;EACA;EACA;EACA;AAMF;AALE;EACC;EACA;AAOH;AANG;EACC;EACA;EACA;EACA;AAQJ;AALE;EACC;EACA;EACA;EACA;EACA;AAOH;AAJC;EACC;AAMF,C","sources":["webpack://src/./assets/scss/components/products.scss","webpack://src/./node_modules/bootstrap/scss/mixins/_breakpoints.scss"],"sourcesContent":["@import \"../base-components\";\n\n.products {\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tlist-style-type: none;\n\tpadding: 0;\n\tmargin-right: -6px;\n\tmargin-bottom: 0;\n\t@include media-breakpoint-up(md) {\n\t\tmargin-right: -8px;\n\t}\n\t&.columns-4 {\n\t\t> li {\n\t\t\tflex: 0 0 50%;\n\t\t\tmax-width: 50%;\n\t\t\t@include media-breakpoint-up(md) {\n\t\t\t\tflex: 0 0 25%;\n\t\t\t\tmax-width: 25%;\n\t\t\t}\n\t\t}\n\t}\n\t&.columns-3 {\n\t\t> li {\n\t\t\tflex: 0 0 50%;\n\t\t\tmax-width: 50%;\n\t\t\t@include media-breakpoint-up(md) {\n\t\t\t\tflex: 0 0 33.3333%;\n\t\t\t\tmax-width: 33.3333%;\n\t\t\t}\n\t\t}\n\t}\n\t&.columns-2 {\n\t\t> li {\n\t\t\tflex: 0 0 50%;\n\t\t\tmax-width: 50%;\n\t\t\t@include media-breakpoint-up(md) {\n\t\t\t\tflex: 0 0 50%;\n\t\t\t\tmax-width: 50%;\n\t\t\t}\n\t\t}\n\t}\n\t&.columns-1 {\n\t\t> li {\n\t\t\tflex: 0 0 100%;\n\t\t\tmax-width: 100%;\n\t\t\t@include media-breakpoint-up(md) {\n\t\t\t\tflex: 0 0 100%;\n\t\t\t\tmax-width: 100%;\n\t\t\t}\n\t\t}\n\t}\n\t> li {\n\t\tborder: 2px solid var(--cl-border);\n\t\tmargin-left: -2px;\n\t\tmargin-bottom: -2px;\n\t}\n\n\t.product-cat {\n\t\tdisplay: none;\n\t}\n\n\t.product {\n\t\tpadding: pxToRem(20) pxToRem(20);\n\t\t@include media-breakpoint-up(md) {\n\t\t\tpadding: pxToRem(56) pxToRem(36);\n\t\t}\n\t\t@include media-breakpoint-up(lg) {\n\t\t\tpadding: pxToRem(70) pxToRem(45);\n\t\t}\n\t\t.wpcbn-btn {\n\t\t\tdisplay: none !important;\n\t\t}\n\t\t> a {\n\t\t\tdisplay: block;\n\t\t\ttext-decoration: none;\n\t\t}\n\t\t.woocommerce-loop-product__title {\n\t\t\tfont-size: pxToRem(32);\n\t\t\tline-height: 1.145;\n\t\t\tmargin: 0;\n\t\t\t@include media-breakpoint-up(md) {\n\t\t\t\tfont-size: pxToRem(48);\n\t\t\t}\n\t\t}\n\t\t&__image-wrapper {\n\t\t\tbackground-color: var(--cl-background-image);\n\t\t\tpadding-top: 100%;\n\t\t\tposition: relative;\n\t\t\tmargin-bottom: pxToRem(10);\n\t\t\t@include media-breakpoint-up(md) {\n\t\t\t\tmargin-bottom: pxToRem(25);\n\t\t\t}\n\t\t\timg {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\tobject-fit: cover;\n\t\t\t\ttransition: opacity 0.2s linear;\n\t\t\t}\n\t\t}\n\t\t&__image-hover {\n\t\t\topacity: 0;\n\t\t}\n\n\t\t.price {\n\t\t\tdisplay: block;\n\t\t\tcolor: #909090;\n\t\t\tfont-size: pxToRem(16);\n\t\t\tline-height: 1.3;\n\t\t\tfont-weight: bold;\n\t\t\t@include media-breakpoint-up(md) {\n\t\t\t\tfont-size: pxToRem(20);\n\t\t\t\tmargin-top: -0.2em;\n\t\t\t}\n\t\t}\n\t}\n\t.product:hover {\n\t\t.product__image-hover {\n\t\t\topacity: 1;\n\t\t\tz-index: 2;\n\t\t}\n\t}\n}\n\n.link-product {\n\tposition: absolute;\n\tz-index: 10;\n\ttop: 0;\n\tright: 0;\n\tmargin: 5px;\n\n\t&__item {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tpadding: 4px 8px;\n\t\tborder: 1px solid var(--cl-primary);\n\t\tborder-radius: 9px;\n\t\tbackground-color: #fff;\n\t\t&__icon {\n\t\t\twidth: 15px;\n\t\t\tmargin-right: 4px;\n\t\t\timg {\n\t\t\t\twidth: 100% !important;\n\t\t\t\theight: auto !important;\n\t\t\t\tposition: static !important;\n\t\t\t\tdisplay: block;\n\t\t\t}\n\t\t}\n\t\t&__text {\n\t\t\tfont-size: 9px;\n\t\t\tletter-spacing: 0.08em;\n\t\t\tfont-weight: bold;\n\t\t\tcolor: var(--cl-primary);\n\t\t\ttext-transform: uppercase;\n\t\t}\n\t}\n\t&__item + &__item {\n\t\tmargin-top: 5px;\n\t}\n}\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @if not $n {\n    @error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\n  }\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min:  breakpoint-min($name, $breakpoints);\n  $next: breakpoint-next($name, $breakpoints);\n  $max:  breakpoint-max($next);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($next, $breakpoints) {\n      @content;\n    }\n  }\n}\n"],"names":[],"sourceRoot":""}